pipeline {
    agent any 
    tools { 
        maven 'Maven' 
      
    }
stages { 
     
 stage('Preparation') { 
     steps {
// for display purposes

      // Get some code from a GitHub repository

      git 'https://github.com/hitman-045/GOL-Repo.git'

      // Get the Maven tool.
     
 // ** NOTE: This 'M3' Maven tool must be configured
 
     // **       in the global configuration.   
     }
   }

   stage('Build') {
       steps {
       // Run the maven build

      //if (isUnix()) {
         sh 'mvn -Dmaven.test.failure.ignore=true install'
      //} 
      //else {
      //   bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
       }
//}
   }
 
  stage('Unit Test Results') {
      steps {
      junit '**/target/surefire-reports/TEST-*.xml'
      
      }
 }
/*    
 } */
    stage('Build and Push Docker Image') {
      steps {
        sh label: '', script: '''sudo docker build -t gameoflife-image:$BUILD_NUMBER .
                                 sudo docker tag gameoflife-image:$BUILD_NUMBER docker.io/sumanthsainooka/gameoflife-image:$BUILD_NUMBER
                                 sudo docker push docker.io/sumanthsainooka/gameoflife-image:$BUILD_NUMBER'''
                                 
      }
 }
  stage('Update Image Version') {
      steps {
        sh label: '', script: '''sed -i s/latest/$BUILD_NUMBER/ deploy-kube.yml'''

      }
 }
  stage('Apply Kubernetes files') {
            steps {
             sh label: '', script: '''scp *.yml jenkins@172.31.21.228:/home/jenkins
                                  ssh jenkins@172.31.21.228 kubectl apply -f deploy-kube.yml
                                  ssh jenkins@172.31.21.228 kubectl apply -f service.yml'''
           
        }
     }
/* stage('Deploy to Kubernetes') {
         steps {
         withKubeConfig([credentialsId: 'jenkins-kube']) {
         sh 'kubectl config set-context $(kubectl config current-context) --namespace=default'
         sh 'kubectl apply -f GOL-Deploy.yml'
        }
        }
     }*/
}     
post {
        success {
            archiveArtifacts 'gameoflife-web/target/*.war'
        }
        failure {
            mail to:"sumanthsainooka@gmail.com", subject:"FAILURE: ${currentBuild.fullDisplayName}", body: "Build failed"
        }
    }       
}
